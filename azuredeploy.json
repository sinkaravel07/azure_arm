{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        
        "aksClusterName": {
            "type": "string",
            "defaultValue": "aks101cluster-vmss",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "agentPool1_Name": {
            "type": "string",
            "defaultValue": "browser",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "agentPool1_OsDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentpool1_Count": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of nodes for the cluster. 1 Node is enough for Dev/Test and minimum 3 nodes, is recommended for Production"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "agentPool1_VMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "agentPool2_Name": {
            "type": "string",
            "defaultValue": "browser",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "agentPool2_OsDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentpool2_Count": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of nodes for the cluster. 1 Node is enough for Dev/Test and minimum 3 nodes, is recommended for Production"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "agentPool2_VMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "agentPool3_Name": {
            "type": "string",
            "defaultValue": "browser",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "agentPool3_OsDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentpool3_Count": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of nodes for the cluster. 1 Node is enough for Dev/Test and minimum 3 nodes, is recommended for Production"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "agentPool3_VMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "agentPool4_Name": {
            "type": "string",
            "defaultValue": "browser",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "agentPool4_OsDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentpool4_Count": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of nodes for the cluster. 1 Node is enough for Dev/Test and minimum 3 nodes, is recommended for Production"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "agentPool4_VMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "metadata": {
                "description": "Kubernetes Version"
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of RBAC."
            }
        },
        "networkPlugin": {
            "type": "string",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },


        
        "sqlServerName": {
            "type": "string",
            "defaultValue": "[uniqueString('sql', resourceGroup().id)]",
            "metadata": {
                "description": "The name of the SQL logical server."
            }
        },
        "sqlDBName": {
            "type": "string",
            "defaultValue": "SampleDB",
            "metadata": {
                "description": "The name of the SQL Database."
            }
        },
        "sqlLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The administrator username of the SQL logical server."
            }
        },
        "SqlAdministratorLoginPassword": {
            "type": "secureString",
            "metadata": {
                "description": "The administrator password of the SQL logical server."
            }
        },
        "sqlDBCollation": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
        },
        "sqlDBEdition": {
            "type": "string",
            "defaultValue": "Basic"
        },
        "sqlDBRequestedServiceObjectiveName": {
            "type": "string",
            "defaultValue": "Basic"
        },
       
        "dataStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Data Storage Account Name"
            },
            "maxLength": 20,
            "minLength": 5
        },
        "blobStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": " Blob Storage Account Name"
            },
            "maxLength": 20,
            "minLength": 5
        },

        "cosmosAccountName": {
            "type": "string",
            "defaultValue": "[toLower(format('mongodb-{0}', uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "Cosmos DB account name"
            }
        },
        "cosmosDBLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the Cosmos DB account."
            }
        },
        "primaryRegion": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The primary replica region for the Cosmos DB account."
            }
        },
        "serverVersion": {
            "type": "string",
            "defaultValue": "4.2",
            "allowedValues": [
                "3.2",
                "3.6",
                "4.0",
                "4.2"
            ],
            "metadata": {
                "description": "Specifies the MongoDB server version to use."
            }
        },
        "defaultConsistencyLevel": {
            "type": "string",
            "defaultValue": "Session",
            "allowedValues": [
                "Eventual",
                "ConsistentPrefix",
                "Session",
                "BoundedStaleness",
                "Strong"
            ],
            "metadata": {
                "description": "The default consistency level of the Cosmos DB account."
            }
        },
        "maxStalenessPrefix": {
            "type": "int",
            "defaultValue": 100,
            "maxValue": 2147483647,
            "minValue": 10,
            "metadata": {
                "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
            }
        },
        "maxIntervalInSeconds": {
            "type": "int",
            "defaultValue": 5,
            "maxValue": 86400,
            "minValue": 5,
            "metadata": {
                "description": "Max lag time (seconds). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
            }
        },
              
        "cosmosTagName": {
            "type": "string",
            "metadata": {
                "description": "Azure Cosmos DB for MongoDB API"
            }
        },
        "backupIntervalInMinutes": {
            "type": "int",
            "defaultValue": 960,
            "maxValue": 1000,
            "minValue": 10,
            "metadata": {
                "description": "backupIntervalInMinutes"
            }
        },
        "backupRetentionIntervalInHours": {
            "type": "int",
            "defaultValue": 120,
            "maxValue": 200,
            "minValue": 10,
            "metadata": {
                "description": "backupRetentionIntervalInHours"
            }
        },
        "backupStorageRedundancy": {
            "type": "string",
            "defaultValue": "Local",
            "metadata": {
                "description": "backupStorageRedundancy"
            }
        },
        "cosmosSqlAutomaticFailover": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable automatic failover for regions"
            }
        },
        "cosmosSqlAccountName": {
            "type": "string",
            "defaultValue": "[format('sql-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Cosmos DB account name, max length 44 characters, lowercase"
            }
        }
    },

    "variables": {
        "consistencyPolicy": {
            "Eventual": {
                "defaultConsistencyLevel": "Eventual"
            },
            "ConsistentPrefix": {
                "defaultConsistencyLevel": "ConsistentPrefix"
            },
            "Session": {
                "defaultConsistencyLevel": "Session"
            },
            "BoundedStaleness": {
                "defaultConsistencyLevel": "BoundedStaleness",
                "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
                "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
            },
            "Strong": {
                "defaultConsistencyLevel": "Strong"
            }
        },
        "locations": [
            {
                "locationName": "[parameters('primaryRegion')]",
                "failoverPriority": 0,
                "isZoneRedundant": false
            }
        ]
    },

    "resources": [
        
        {
            "apiVersion": "2022-03-01",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('aksClusterName')]",
            "tags": {
                "displayname": "AKS Cluster"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "[parameters('agentPool1_Name')]",
                        "osDiskSizeGB": "[parameters('agentPool1_OsDiskSizeGB')]",
                        "count": "[parameters('agentpool1_Count')]",
                        "vmSize": "[parameters('agentPool1_VMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System"
                    },
                    {
                        "name": "[parameters('agentPool2_Name')]",
                        "osDiskSizeGB": "[parameters('agentPool2_OsDiskSizeGB')]",
                        "count": "[parameters('agentpool2_Count')]",
                        "vmSize": "[parameters('agentPool2_VMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System"
                    },
                    {
                        "name": "[parameters('agentPool3_Name')]",
                        "osDiskSizeGB": "[parameters('agentPool3_OsDiskSizeGB')]",
                        "count": "[parameters('agentpool3_Count')]",
                        "vmSize": "[parameters('agentPool3_VMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System"
                    },
                    {
                        "name": "[parameters('agentPool4_Name')]",
                        "osDiskSizeGB": "[parameters('agentPool4_OsDiskSizeGB')]",
                        "count": "[parameters('agentpool4_Count')]",
                        "vmSize": "[parameters('agentPool4_VMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System"
                    }
                ],
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]"
                }
            }
        },
       
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-11-01-preview",
            "name": "[parameters('sqlServerName')]",
            "location": "[parameters('sqlLocation')]",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('SqlAdministratorLoginPassword')]",
                "publicNetworkAccess": "Enabled"
            }
        },
               {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlDBName'))]",
            "location": "[parameters('sqlLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ],
            "properties": {
                "collation": "[parameters('sqlDBCollation')]",
                "edition": "[parameters('sqlDBEdition')]",
                "requestedServiceObjectiveName": "[parameters('sqlDBRequestedServiceObjectiveName')]"
            }
        },
      
        {
            "name": "[parameters('dataStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "largeFileSharesState": "Disabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "queue": {
                            "enabled": true
                        },
                        "table": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "name": "[parameters('blobStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "largeFileSharesState": "Disabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },

       
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-10-15",
            "name": "[parameters('cosmosAccountName')]",
            "tags": {
                "displayname": "[parameters('cosmosTagName')]"
            },
            "location": "[parameters('cosmosDBLocation')]",
            "kind": "MongoDB",
            "properties": {
                "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
                "locations": "[variables('locations')]",
                "databaseAccountOfferType": "Standard",
                "apiProperties": {
                    "serverVersion": "[parameters('serverVersion')]"
                },
                "capabilities": [
                    {
                        "name": "MongoDBv3.4"
                    },
                    {
                        "name": "EnableAggregationPipeline"
                    },
                    {
                        "name": "AllowSelfServeUpgradeToMongo36"
                    },
                    {
                        "name": "DisableRateLimitingResponses"
                    }
                ],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": "[parameters('backupIntervalInMinutes')]",
                        "backupRetentionIntervalInHours": "[parameters('backupRetentionIntervalInHours')]",
                        "backupStorageRedundancy": "[parameters('backupStorageRedundancy')]"
                    }
                }
            }
        },
       
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-01-15",
            "name": "[parameters('cosmosSqlAccountName')]",
            "kind": "GlobalDocumentDB",
            "location": "[parameters('location')]",
            "properties": {
                "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
                "locations": "[variables('locations')]",
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": "[parameters('cosmosSqlAutomaticFailover')]",
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": "[parameters('backupIntervalInMinutes')]",
                        "backupRetentionIntervalInHours": "[parameters('backupRetentionIntervalInHours')]",
                        "backupStorageRedundancy": "[parameters('backupStorageRedundancy')]"
                    }
                }
            }
        }
    ],
    "outputs": {
       
        "ClusterFQDN": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).fqdn]"
        },
       
        "SqlServerName": {
            "type": "string",
            "value": "[parameters('sqlServerName')]"
        },
        "SqlServerFQDNName": {
            "type": "string",
            "value": "[reference(parameters('sqlServerName')).fullyQualifiedDomainName]"
        },
        "SqlDatabaseName": {
            "type": "string",
            "value": "[parameters('sqlDBName')]"
        },
        "SqlDatabaseConnectionString": {
            "type": "string",
            "value": "[concat('Data Source=',reference(parameters('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',parameters('sqlDBName'),';User ID=',parameters('sqlAdministratorLogin'),';Password=',parameters('SqlAdministratorLoginPassword'))]"
        },
       
        "CosmosDBAccountName": {
            "type": "string",
            "value": "[parameters('cosmosAccountName')]"
        },
        "CosmosDatabaseName": {
            "type": "string",
            "value": "[parameters('cosmosMongoDBDatabaseName')]"
        },
        "CosmosDBConnectionString": {
            "type": "string",
            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), '2021-10-15').connectionStrings[0].connectionString]"
        },
       
        "DataStorageAccountKey": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
        },
        "DataStorageAccountName": {
            "type": "string",
            "value": "[parameters('dataStorageAccountName')]"
        },
        "DataStorageConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('dataStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
        },
        "BlobStorageAccountKey": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('blobStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
        },
        "BlobStorageAccountName": {
            "type": "string",
            "value": "[parameters('blobStorageAccountName')]"
        },
        "BlobStorageConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('blobStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('blobStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
        },
         "CosmosSqlDBAccountName": {
            "type": "string",
            "value": "[parameters('cosmosSqlAccountName')]"
        },
         "CosmosSqlDBConnectionString": {
            "type": "string",
            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosSqlAccountName')), '2021-10-15').connectionStrings[0].connectionString]"
        },
         "cosmosSqldbObject": {
            "type": "object",
            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosSqlAccountName')), '2021-10-15')]"
        }
    }
}
